fails:Proc#arity returns 1 for a block taking |a, | arguments
fails:Proc#arity returns 0 for a Proc taking one optional argument
fails:Proc#arity returns 1 for a Proc taking |a, b = 0| argument
fails:Proc#arity returns 1 for a Proc taking |a, b = 0, c = 0| argument
fails:Proc#arity returns 1 for a Proc taking |(a, b), c = 0| argument
fails:"Proc#arity for instances created with -> () { } returns negative values for definition \n    @a = -> (a: 1) { }\n    @b = -> (a: 1, b: 2) { }"
fails:"Proc#arity for instances created with -> () { } returns negative values for definition \n    @a = -> (**k, &l) { }\n    @b= -> (*a, **k) { }\n    @c = ->(a: 1, b: 2, **k) { }"
fails:"Proc#arity for instances created with -> () { } returns negative values for definition \n    @a = -> (a=1, *b, c:, d: 2, **k, &l) { }"
fails:"Proc#arity for instances created with -> () { } returns negative values for definition \n    @a = -> (a, b=1, *c, d, e:, f: 2, **k, &l) { }\n    @b = -> (a, b=1, *c, d:, e:, f: 2, **k, &l) { }\n    @c = -> (a=0, b=1, *c, d, e:, f: 2, **k, &l) { }\n    @d = -> (a=0, b=1, *c, d:, e:, f: 2, **k, &l) { }"
fails:"Proc#arity for instances created with lambda { || } returns negative values for definition \n    @a = lambda { |a: 1| }\n    @b = lambda { |a: 1, b: 2| }"
fails:"Proc#arity for instances created with lambda { || } returns negative values for definition \n    @a = lambda { |**k, &l| }\n    @b = lambda { |*a, **k| }\n    @c = lambda { |a: 1, b: 2, **k| }"
fails:"Proc#arity for instances created with lambda { || } returns negative values for definition \n    @a = lambda { |a=1, *b, c:, d: 2, **k, &l| }"
fails:"Proc#arity for instances created with lambda { || } returns negative values for definition \n    @a = lambda { |(a, (*b, c)), d=1| }\n    @b = lambda { |a, (*b, c), d, (*e), (*), **k| }\n    @c = lambda { |a, (b, c), *, d:, e: 2, **| }"
fails:"Proc#arity for instances created with lambda { || } returns negative values for definition \n    @a = lambda { |a, b=1, *c, d, e:, f: 2, **k, &l| }\n    @b = lambda { |a, b=1, *c, d:, e:, f: 2, **k, &l| }\n    @c = lambda { |a=0, b=1, *c, d, e:, f: 2, **k, &l| }\n    @d = lambda { |a=0, b=1, *c, d:, e:, f: 2, **k, &l| }"
