fails:Kernel.spawn joins a new process group if :pgroup => true
fails:Kernel.spawn redirects STDERR to the given file if :err => String
windows(JRUBY-4354):Kernel.spawn executes the given command
windows(JRUBY-4354):Kernel.spawn returns the process ID of the new process as a Fixnum
windows(JRUBY-4354):Kernel.spawn returns immediately
fails:Kernel.spawn redirects STDOUT to the given file if :out => String
fails(compiler):Kernel.spawn does NOT redirect both STDERR and STDOUT at the time to the given name
fails:Kernel#spawn calls #to_str to convert the environment keys
fails:Kernel#spawn calls #to_str to convert the environment values
fails:Kernel#spawn joins a new process group if :pgroup => true
fails:Kernel#spawn joins a new process group if :pgroup => 0
fails:Kernel#spawn sets the umask if given the :umask option
critical(runs very long before failing):Kernel#spawn redirects STDOUT to the given file if :out => String
critical(runs very long before failing):Kernel#spawn redirects STDERR to the given file if :err => String
fails:Kernel#spawn does NOT redirect both STDERR and STDOUT at the time to the given name
fails:Kernel#spawn raises an Errno::EACCES when passed a directory
fails:Kernel#spawn with a command array uses the first element as the command name and the second as the argv[0] value
fails:Kernel.spawn with a command array does not subject the arguments to shell expansion
fails:Kernel#spawn with a command array calls #to_ary to convert the argument to an Array
fails:Kernel.spawn calls #to_str to convert the environment keys
fails:Kernel.spawn calls #to_str to convert the environment values
fails:Kernel.spawn joins a new process group if :pgroup => 0
fails:Kernel.spawn sets the umask if given the :umask option
fails:Kernel.spawn closes file descriptors >= 3 in the child process
fails:Kernel.spawn raises an Errno::EACCES when passed a directory
fails:Kernel.spawn raises an ArgumentError when passed a string key in options
fails:Kernel.spawn raises an ArgumentError when passed an unknown option key
fails:Kernel.spawn with a single argument raises an ArgumentError if the command includes a null byte
fails:Kernel.spawn with a single argument raises a TypeError if the argument does not respond to #to_str
fails:Kernel.spawn with multiple arguments raises an ArgumentError if an argument includes a null byte
fails:Kernel.spawn with multiple arguments raises a TypeError if an argument does not respond to #to_str
fails:Kernel.spawn with a command array uses the first element as the command name and the second as the argv[0] value
fails:Kernel.spawn with a command array calls #to_ary to convert the argument to an Array
fails:Kernel.spawn with a command array raises an ArgumentError if the Strings in the Array include a null byte
fails:Kernel.spawn with a command array raises a TypeError if an element in the Array does not respond to #to_str
fails:Kernel.spawn does NOT redirect both STDERR and STDOUT at the time to the given name
fails(only in full runs):Kernel.spawn with multiple arguments does not subject the arguments to shell expansion
fails:Kernel#spawn does not close file descriptors >= 3 in the child process when given a false :close_others option and fds are set close_on_exec=false
fails:Kernel#spawn with Integer option keys maps the key to a file descriptor in the child that inherits the file descriptor from the parent specified by the value
fails:Kernel.spawn does not close file descriptors >= 3 in the child process when given a false :close_others option and fds are set close_on_exec=false
fails:Kernel.spawn when passed :chdir changes to the directory passed for :chdir
fails:Kernel.spawn when passed :chdir calls #to_path to convert the :chdir value
fails:Kernel.spawn with Integer option keys maps the key to a file descriptor in the child that inherits the file descriptor from the parent specified by the value
fails:Kernel#spawn does not unset other environment variables when given a false :unsetenv_others option
fails:Kernel#spawn does not unset environment variables included in the environment hash
fails:Kernel#spawn joins the current process if :pgroup => false
fails:Kernel.spawn does not unset other environment variables when given a false :unsetenv_others option
fails:Kernel.spawn does not unset environment variables included in the environment hash
fails:Kernel.spawn joins the current process if :pgroup => false
