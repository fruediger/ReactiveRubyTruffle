fails:StringIO#gets when passed [separator] returns the data read till the next occurence of the passed separator
fails:StringIO#gets when passed [separator] sets $_ to the read content
fails:StringIO#gets when passed [separator] accepts string as separator
fails:StringIO#gets when passed [separator] returns the next paragraph when the passed separator is an empty String
fails:StringIO#gets when passed [separator] returns the remaining content starting at the current position when passed nil
fails:StringIO#gets when passed [separator] tries to convert the passed separator to a String using #to_str
fails:StringIO#gets when passed no argument returns the data read till the next occurence of $/ or till eof
fails:StringIO#gets when passed no argument sets $_ to the read content
fails:StringIO#gets when passed no argument returns nil if self is at the end
fails:StringIO#gets when passed [limit] returns the data read until the limit is met
fails:StringIO#gets when passed [limit] sets $_ to the read content
fails:StringIO#gets when passed [limit] tries to convert the passed limit to an Integer using #to_int
fails:StringIO#gets when passed [limit] returns a blank string when passed a limit of 0
fails:StringIO#gets when passed [separator] and [limit] returns the data read until the limit is consumed or the separator is met
fails:StringIO#gets when passed [separator] and [limit] sets $_ to the read content
fails:StringIO#gets when passed [separator] and [limit] tries to convert the passed separator to a String using #to_str
fails:StringIO#gets when passed [separator] and [limit] does not raise TypeError if passed separator is nil
fails:StringIO#gets when passed [separator] and [limit] tries to convert the passed limit to an Integer using #to_int
fails:StringIO#gets when passed [separator] and [limit] returns a String when both separator and limit are nil
