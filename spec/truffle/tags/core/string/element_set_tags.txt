fails:String#[]= with Fixnum index taints self if other_str is tainted
fails:String#[]= with Fixnum index raises IndexError if the string index doesn't match a position in the string
fails:String#[]= with Fixnum index calls to_int on index
fails:String#[]= with Fixnum index calls #to_int to convert the index
fails:String#[]= with Fixnum index raises a TypeError if #to_int does not return an Fixnum
fails:String#[]= with Fixnum index raises an IndexError if #to_int returns a value out of range
fails:String#[]= with String index replaces fewer characters with more characters
fails:String#[]= with String index replaces more characters with fewer characters
fails:String#[]= with String index replaces characters with no characters
fails:String#[]= with String index raises an IndexError if the search String is not found
fails:String#[]= with String index replaces characters with a multibyte character
fails:String#[]= with String index replaces multibyte characters with characters
fails:String#[]= with String index replaces multibyte characters with multibyte characters
fails:String#[]= with String index encodes the String in an encoding compatible with the replacement
fails:String#[]= with String index raises an Encoding::CompatibilityError if the replacement encoding is incompatible
fails:String#[]= with a Regexp index replaces the matched text with the rhs
fails:String#[]= with a Regexp index raises IndexError if the regexp index doesn't match a position in the string
fails:String#[]= with a Regexp index calls #to_str to convert the replacement
fails:String#[]= with a Regexp index checks the match before calling #to_str to convert the replacement
fails:String#[]= with a Regexp index replaces characters with a multibyte character
fails:String#[]= with a Regexp index replaces multibyte characters with characters
fails:String#[]= with a Regexp index replaces multibyte characters with multibyte characters
fails:String#[]= with a Regexp index encodes the String in an encoding compatible with the replacement
fails:String#[]= with a Regexp index raises an Encoding::CompatibilityError if the replacement encoding is incompatible
fails:String#[]= with a Regexp index with 3 arguments calls #to_int to convert the second object
fails:String#[]= with a Regexp index with 3 arguments raises a TypeError if #to_int does not return a Fixnum
fails:String#[]= with a Regexp index with 3 arguments uses the 2nd of 3 arguments as which capture should be replaced
fails:String#[]= with a Regexp index with 3 arguments allows the specified capture to be negative and count from the end
fails:String#[]= with a Regexp index with 3 arguments checks the match index before calling #to_str to convert the replacement
fails:String#[]= with a Regexp index with 3 arguments raises IndexError if the specified capture isn't available
fails:String#[]= with a Regexp index with 3 arguments when the optional capture does not match raises an IndexError before setting the replacement
fails:String#[]= with Fixnum index, count starts at idx and overwrites count characters before inserting the rest of other_str
fails:String#[]= with Fixnum index, count counts negative idx values from end of the string
fails:String#[]= with Fixnum index, count overwrites and deletes characters if count is more than the length of other_str
fails:String#[]= with Fixnum index, count deletes characters if other_str is an empty string
fails:String#[]= with Fixnum index, count deletes characters up to the maximum length of the existing string
fails:String#[]= with Fixnum index, count appends other_str to the end of the string if idx == the length of the string
fails:String#[]= with Fixnum index, count taints self if other_str is tainted
fails:String#[]= with Fixnum index, count calls #to_int to convert the index and count objects
fails:String#[]= with Fixnum index, count raises a TypeError if #to_int for index does not return an Integer
fails:String#[]= with Fixnum index, count raises a TypeError if #to_int for count does not return an Integer
fails:String#[]= with Fixnum index, count calls #to_str to convert the replacement object
fails:String#[]= with Fixnum index, count raises a TypeError of #to_str does not return a String
fails:String#[]= with Fixnum index, count raises an IndexError if |idx| is greater than the length of the string
fails:String#[]= with Fixnum index, count raises an IndexError if count < 0
fails:String#[]= with Fixnum index, count raises a TypeError if other_str is a type other than String
fails:String#[]= with Fixnum index, count replaces characters with a multibyte character
fails:String#[]= with Fixnum index, count replaces multibyte characters with characters
fails:String#[]= with Fixnum index, count replaces multibyte characters with multibyte characters
fails:String#[]= with Fixnum index, count deletes a multibyte character
fails:String#[]= with Fixnum index, count inserts a multibyte character
fails:String#[]= with Fixnum index, count raises an IndexError if the character index is out of range of a multibyte String
fails:String#[]= with Fixnum index, count encodes the String in an encoding compatible with the replacement
fails:String#[]= with Fixnum index, count raises an Encoding::CompatibilityError if the replacement encoding is incompatible
