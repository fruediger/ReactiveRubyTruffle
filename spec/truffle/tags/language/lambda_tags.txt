fails(inherited):"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> (*, **k) { k }"
fails(inherited):"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> (a: @a = -> (a: 1) { a }, b:) do\n      [a, b]\n    end"
fails(inherited):"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda { |*, **k| k }"
fails(inherited):"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda do |a: (@a = -> (a: 1) { a }), b:|\n      [a, b]\n    end"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> ((*a, b)) { [a, b] }"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> ((a, b, *c, d), (*e, f, g), (*h)) do\n      [a, b, c, d, e, f, g, h]\n    end"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> (a, (b, (c, *d, (e, (*f)), g), (h, (i, j)))) do\n      [a, b, c, d, e, f, g, h, i, j]\n    end"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> (*, **k) { k }"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> (a: @a = -> (a: 1) { a }, b:) do\n      [a, b]\n    end"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> (a, b=1, *c, (*d, (e)), f: 2, g:, h:, **k, &l) do\n      [a, b, c, d, e, f, g, h, k, l]\n    end"
fails:"A lambda literal -> () { } assigns variables from parameters for definition \n    @a = -> a, b=1, *c, d, e:, f: 2, g:, **k, &l do\n      [a, b, c, d, e, f, g, k, l]\n    end"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda { |(*a, b)| [a, b] }"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda do |(a, b, *c, d), (*e, f, g), (*h)|\n      [a, b, c, d, e, f, g, h]\n    end"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda do |a, (b, (c, *d, (e, (*f)), g), (h, (i, j)))|\n      [a, b, c, d, e, f, g, h, i, j]\n    end"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda { |*, **k| k }"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda { |*, &b| b }"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda do |a: (@a = -> (a: 1) { a }), b:|\n      [a, b]\n    end"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda do |a, b=1, *c, (*d, (e)), f: 2, g:, h:, **k, &l|\n      [a, b, c, d, e, f, g, h, k, l]\n    end"
fails:"A lambda expression 'lambda { ... }' assigns variables from parameters for definition \n    @a = lambda do |a, b=1, *c, d, e:, f: 2, g:, **k, &l|\n      [a, b, c, d, e, f, g, k, l]\n    end"
